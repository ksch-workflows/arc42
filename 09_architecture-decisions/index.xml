<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architecture decisions on Administration Architecture Documentation</title><link>https://ksch-workflows.github.io/administration/09_architecture-decisions/</link><description>Recent content in Architecture decisions on Administration Architecture Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://ksch-workflows.github.io/administration/09_architecture-decisions/index.xml" rel="self" type="application/rss+xml"/><item><title>Java application architecture style</title><link>https://ksch-workflows.github.io/administration/09_architecture-decisions/2021-05-08_backend-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ksch-workflows.github.io/administration/09_architecture-decisions/2021-05-08_backend-architecture/</guid><description>Context There needs to be a concept for the module structure of the backend server.
Design goals The business logic of the software needs to be very flexible, so that it can be adjusted to changing requirements of the KSCH. The system needs to have good testability, so that there can be a very good test coverage for those business rules. Enable hobby developer to contribute to the project in limited spare time.</description></item><item><title>Use Flutter as framework for frontend</title><link>https://ksch-workflows.github.io/administration/09_architecture-decisions/2021-03-05_frontend-technology/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ksch-workflows.github.io/administration/09_architecture-decisions/2021-03-05_frontend-technology/</guid><description>Alternatives (A) Apache Wicket Pros Powerful framework to create Java based web applications. Relativly small learning curve for new contributors. Supports the reaction of a well designed, modular page structure. Very active community. The framework is time-tested and stable. Cons Adding pages with highly dynamic content requires JavaScript which is possible to be hooked into Wicket applications but this gets more and more complicated and thus goes against the goal of maximum simplicity of the source code.</description></item><item><title>Use Google App Engine for the deployment of the staging environment</title><link>https://ksch-workflows.github.io/administration/09_architecture-decisions/2021-03-05_backend-technoglogy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ksch-workflows.github.io/administration/09_architecture-decisions/2021-03-05_backend-technoglogy/</guid><description>Context In order to iterative development cycles for acceptance testing and user experience design, it is necessary provide the software in a publicly accessible domain. Since the instance will only be sporadicly used at random times, having an always online instance hosted on a rented virtual machine would be wasteful.
Alternatives (A) AWS Lambda Pros AWS offers lots of powerful features to build web applications. The usage based pricing plans lead to fair operational costs.</description></item><item><title>Use Java instead of Kotlin</title><link>https://ksch-workflows.github.io/administration/09_architecture-decisions/2021-03-07_java-vs-kotlin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ksch-workflows.github.io/administration/09_architecture-decisions/2021-03-07_java-vs-kotlin/</guid><description>Context Kotlin tries to solve some of the problem in the design of the Java programming language. There are many senior developers which advocate to use Kotlin over Java. Also it is preferred by many mid-level developers.
Alternatives (A) Java Pros Very broadly used Many tools which support the language Lots of tutorials Cons Verbose syntax No null safety (B) Kotlin Pros Null safety Good reputation Enables to write elegant code Cons Pushes for certain design ideas (e.</description></item></channel></rss>